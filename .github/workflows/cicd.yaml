name: CICD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup nodejs version
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

  tests:
    runs-on: ubuntu-latest
    needs: setup

    permissions:
      # Required to checkout the code
      contents: read
      # Required by coverage generator to put a comment into the pull-request
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node version
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install playwright browsers
        run: npx playwright install --with-deps

      - name: Run unit tests
        run: npm run test:coverage

      - name: Report Coverage
        if: ${{ hashFiles('coverage/') != '' }}
        uses: davelosert/vitest-coverage-report-action@v2

      - name: Build software
        run: npx nuxt build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuxt-output
          path: .output/
          include-hidden-files: true

  deploy-to-docker:
    runs-on: ubuntu-latest
    needs:
      - setup
      - tests
    steps:
      - name: Install curl
        run: sudo apt-get install -y curl openssl

      - name: Checkout code
        uses: actions/checkout@v4

      - run: pwd
      - run: ls -la

      - name: Download generated files
        uses: actions/download-artifact@v4
        with:
          name: nuxt-output
          path: .output/

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v5
        with:
          images: joschi64/obs-leihe

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Call deployment webhook if it exists
        env:
          url: ${{ secrets.DEPLOYMENT_WEBHOOK }}
        if: ${{ env.url != '' }}
        run: |
          sed s/https/http/ <<< $url
          curl -X POST $url
